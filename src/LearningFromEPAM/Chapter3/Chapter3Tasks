Задания к главе 3
Вариант А
Создать классы, спецификации которых приведены ниже. Определить кон-
структоры и методы setТип(), getТип(), toString(). Определить дополнительно
методы в классе, создающем массив объектов. Задать критерий выбора данных
и вывести эти данные на консоль. В каждом классе, обладающем информацией,
должно быть объявлено несколько конструкторов.
1. Student: id, Фамилия, Имя, Отчество, Дата рождения, Адрес, Телефон,
Факультет, Курс, Группа.
Создать массив объектов. Вывести:
a) список студентов заданного факультета;
b) списки студентов для каждого факультета и курса;
c) список студентов, родившихся после заданного года;
d) список учебной группы.
2. Customer: id, Фамилия, Имя, Отчество, Адрес, Номер кредитной карточки,
Номер банковского счета.
Создать массив объектов. Вывести:
a) список покупателей в алфавитном порядке;
b) список покупателей, у которых номер кредитной карточки находится
в заданном интервале.
3. Patient: id, Фамилия, Имя, Отчество, Адрес, Телефон, Номер медицинской
карты, Диагноз.
Создать массив объектов. Вывести:
a) список пациентов, имеющих данный диагноз;
b) список пациентов, номер медицинской карты которых находится в за-
данном интервале.
4. Abiturient: id, Фамилия, Имя, Отчество, Адрес, Телефон, Оценки.
Создать массив объектов. Вывести:
a) список абитуриентов, имеющих неудовлетворительные оценки;
b) список абитуриентов, у которых сумма баллов выше заданной;
c) выбрать заданное число n абитуриентов, имеющих самую высокую
сумму баллов (вывести также полный список абитуриентов, имеющих
полупроходную сумму).
5. Book: id, Название, Автор(ы), Издательство, Год издания, Количество
страниц, Цена, Тип переплета.
Создать массив объектов. Вывести:
a) список книг заданного автора;
b) список книг, выпущенных заданным издательством;
c) список книг, выпущенных после заданного года.
6. House: id, Номер квартиры, Площадь, Этаж, Количество комнат, Улица, Тип
здания, Срок эксплуатации.
Создать массив объектов. Вывести:
a) список квартир, имеющих заданное число комнат;
b) список квартир, имеющих заданное число комнат и расположенных на
этаже, который находится в заданном промежутке;
c) список квартир, имеющих площадь, превосходящую заданную.
7. Phone: id, Фамилия, Имя, Отчество, Адрес, Номер кредитной карточки,
Дебет, Кредит, Время городских и междугородных разговоров.
Создать массив объектов. Вывести:
a) сведения об абонентах, у которых время внутригородских разговоров
превышает заданное;
b) сведения об абонентах, которые пользовались междугородной связью;
c) сведения об абонентах в алфавитном порядке.
8. Car: id, Марка, Модель, Год выпуска, Цвет, Цена, Регистрационный номер.
Создать массив объектов. Вывести:
a) список автомобилей заданной марки;
b) список автомобилей заданной модели, которые эксплуатируются боль-
ше n лет;
c) список автомобилей заданного года выпуска, цена которых больше ука-
занной.
9. Product: id, Наименование, UPC, Производитель, Цена, Срок хранения,
Количество.
Создать массив объектов. Вывести:
a) список товаров для заданного наименования;
b) список товаров для заданного наименования, цена которых не превос-
ходит заданную;
c) список товаров, срок хранения которых больше заданного.
10.Train: Пункт назначения, Номер поезда, Время отправления, Число мест
(общих, купе, плацкарт, люкс).
Создать массив объектов. Вывести:
a) список поездов, следующих до заданного пункта назначения;
b) список поездов, следующих до заданного пункта назначения и отправ-
ляющихся после заданного часа;
c) список поездов, отправляющихся до заданного пункта назначения
и имеющих общие места.
11.Bus: Фамилия и инициалы водителя, Номер автобуса, Номер маршрута,
Марка, Год начала эксплуатации, Пробег.
Создать массив объектов. Вывести:
a) список автобусов для заданного номера маршрута;
b) список автобусов, которые эксплуатируются больше заданного срока;
c) список автобусов, пробег у которых больше заданного расстояния.
12.Airline: Пункт назначения, Номер рейса, Тип самолета, Время вылета, Дни
недели.
Создать массив объектов. Вывести:
a) список рейсов для заданного пункта назначения;
b) список рейсов для заданного дня недели;
c) список рейсов для заданного дня недели, время вылета для которых
больше заданного.

Вариант В
Реализовать методы сложения, вычитания, умножения и деления объектов (для
тех классов, объекты которых могут поддерживать арифметические действия).
1. Определить класс Дробь (Рациональная Дробь) в виде пары чисел m и n.
Объявить и инициализировать массив из k дробей, ввести/вывести значе-
ния для массива дробей. Создать массив/список/множество объектов и пе-
редать его в метод, который изменяет каждый элемент массива с четным
индексом путем добавления следующего за ним элемента.
2. Определить класс Комплекс. Создать массив/список/множество размерно-
сти n из комплексных координат. Передать его в метод, который выполнит
сложение/умножение его элементов.
3. Определить класс Квадратное уравнение. Реализовать методы для поиска
корней, экстремумов, а также интервалов убывания/возрастания. Создать
массив/список/множество объектов и определить наибольшие и наимень-
шие по значению корни.
4. Определить класс Полином степени n. Объявить массив/список/множест-
во из m полиномов и определить сумму полиномов массива.
5. Определить класс Интервал с учетом включения/невключения концов.
Создать методы по определению пересечения и объединения интервалов,
причем интервалы, не имеющие общих точек, пересекаться/объединятся не
могут. Объявить массив/список/множество и n интервалов и определить
расстояние между самыми удаленными концами.
6. Определить класс Точка на плоскости (в пространстве) и во времени.
Задать движение точки в определенном направлении. Создать методы по
определению скорости и ускорения точки. Проверить для двух точек воз-
можность пересечения траекторий. Определить расстояние между двумя
точками в заданный момент времени.
7. Определить класс Треугольник на плоскости. Определить площадь и пе-
риметр треугольника. Создать массив/список/множество объектов и под-
считать количество треугольников разного типа (равносторонний, равнобед-
ренный, прямоугольный, произвольный). Определить для каждой группы
наибольший и наименьший по площади (периметру) объект.
8. Определить класс Четырехугольник на плоскости. Определить площадь
и периметр четырехугольника. Создать массив/список/множество объектов
и подсчитать количество четырехугольников разного типа (квадрат,
прямоугольник, ромб, произвольный). Определить для каждой группы наи-
больший и наименьший по площади (периметру) объект.
9. Определить класс Окружность на плоскости. Определить площадь и пери-
метр. Создать массив/список/множество объектов и определить группы
окружностей, центры которых лежат на одной прямой. Определить наи-
больший и наименьший по площади (периметру) объект.
10. Определить класс Прямая на плоскости (пространстве). Определить точки
пересечения прямой с осями координат. Определить координаты пересече-
ния двух прямых. Создать массив/список/множество объектов и опреде-
лить группы параллельных прямых.
Вариант С
1. Определить класс Полином c коэффициентами типа Рациональная
Дробь. Объявить массив/список/множество из n полиномов и определить
сумму полиномов массива.
2. Определить класс Прямая на плоскости (в пространстве), параметры кото-
рой задаются с помощью Рациональной Дроби. Определить точки пересе-
чения прямой с осями координат. Определить координаты пересечения
двух прямых. Создать массив/список/множество объектов и определить
группы параллельных прямых.
3. Определить класс Полином с коэффициентами типа Комплексное число.
Объявить массив/список/множество из m полиномов и определить сумму
полиномов массива.
4. Определить класс Дробь в виде пары (m, n) с коэффициентами типа
Комплексное число. Объявить и инициализировать массив из k дробей, вве-
сти/вывести значения для массива дробей. Создать массив/список/множест-
во объектов и передать его в метод, который изменяет каждый элемент мас-
сива с четным индексом путем добавления следующего за ним элемента.
5. Определить класс Комплекс, действительная и мнимая часть которой
представлены в виде Рациональной Дроби. Создать массив/список/мно-
жество размерности n из комплексных координат. Передать его в метод, ко-
торый выполнит сложение/умножение его элементов.
6. Определить класс Окружность на плоскости, координаты центра которой
задаются с помощью Рациональной Дроби. Определить площадь и пери-
метр. Создать массив/список/множество объектов и определить группы
окружностей, центры которых лежат на одной прямой. Определить наи-
больший и наименьший по площади (периметру) объект.
7. Определить класс Точка в пространстве, координаты которой задаются
с помощью Рациональной Дроби. Создать методы по определению рас-
стояния между точками и расстояния до начала координат. Проверить для
трех точек возможность нахождения на одной прямой.

8. Определить класс Точка в пространстве, координаты которой задаются
с помощью Комплексного числа. Создать методы по определению расстоя-
ния между точками и расстояния до начала координат.
9. Определить класс Треугольник на плоскости, вершины которого имеют
тип Точка. Определить площадь и периметр треугольника. Создать мас-
сив/список/множество объектов и подсчитать количество треугольников
разного типа (равносторонний, равнобедренный, прямоугольный, произ-
вольный). Определить для каждой группы наибольший и наименьший по
площади (периметру) объект.
10. Определить класс Четырехугольник на плоскости, вершины которого
имеют тип Точка. Определить площадь и периметр четырехугольника.
Создать массив/список/множество объектов и подсчитать количество четы-
рехугольников разного типа (квадрат, прямоугольник, ромб, произволь-
ный). Определить для каждой группы наибольший и наименьший по пло-
щади (периметру) объект.
11. Определить класс Вектор. Реализовать методы инкремента, декремента,
индексирования. Определить массив из m объектов. Каждую из пар векто-
ров передать в методы, возвращающие их скалярное произведение и дли-
ны. Вычислить и вывести углы между векторами.
12. Определить класс Вектор. Реализовать методы для вычисления модуля
вектора, скалярного произведения, сложения, вычитания, умножения на
константу. Объявить массив объектов. Написать метод, который для задан-
ной пары векторов будет определять, являются ли они коллинеарными или
ортогональными.
13. Определить класс Вектор в R3. Реализовать методы для проверки векторов
на ортогональность, проверки пересечения неортогональных векторов,
сравнения векторов. Создать массив из m объектов. Определить компланар-
ные векторы.
14. Определить класс Булева матрица (BoolMatrix). Реализовать методы для
логического сложения (дизъюнкции), умножения и инверсии матриц.
Реализовать методы для подсчета числа единиц в матрице и упорядочения
строк в лексикографическом порядке.
15. Построить класс Булев вектор (BoolVector). Реализовать методы для вы-
полнения поразрядных конъюнкции, дизъюнкции и отрицания векторов,
а также подсчета числа единиц и нулей в векторе.
16. Определить класс Множество символов. Реализовать методы для опреде-
ления принадлежности заданного элемента множеству; пересечения, объе-
динения, разности двух множеств. Создать методы сложения, вычитания,
умножения (пересечения), индексирования, присваивания. Создать массив
объектов и передавать пары объектов в метод другого класса, который
строит множество, состоящее из элементов, входящих только в одно из за-
данных множеств.

17. Определить класс Определенный интеграл с аналитической подынтег-
ральной функцией. Создать методы для вычисления значения по формуле
левых прямоугольников, по формуле правых прямоугольников, по формуле
средних прямоугольников, по формуле трапеций, по формуле Симпсона
(параболических трапеций).
18. Определить класс Массив. Создать методы сортировки: обменная сорти-
ровка (метод пузырька); обменная сортировка «Шейкер-сортировка», сор-
тировка посредством выбора (метод простого выбора), сортировка вставка-
ми: метод хеширования (сортировка с вычислением адреса), сортировка
вставками (метод простых вставок), сортировка бинарного слияния, сорти-
ровка Шелла (сортировка с убывающим шагом).
Тестовые задания к главе 3
Вопрос 3.1.
Дано объявление класса: class A{}. Выбрать корректное объявление кон-
структора (выбрать один).
a) A() {this.super();}
b) A() {Object.super();}
c) A() {A.super();}
d) A() {}
Вопрос 3.2.
Дан код:
class Base{
void method(int i) {
System.out.print(" int ");
}
void method(long i) {
System.out.print(" long ");
}
}
public class Main {
public static void main(String[] args) {
Base base = new Base();
base.method(1L);
base.method(1_000_000);
}
}
Что будет выведено в результате компиляции и выполнения кода? (вы-
брать один)
a) int int
b) long long
JAVA FROM EPAM
118
c) int long
d) long int
e) compilation fails
Вопрос 3.3.
Какие из следующих объявлений представляют корректное объявление ме-
тода? (выбрать три)
a) protected abstract void method();
b) final static void method(){}
c) public protected void method(){}
d) default void method();
e) private final void method(){}
f) public static method(){}
Вопрос 3.4.
Какие из следующих объявлений представляют корректное объявление
класса, объявленного в пакете? (выбрать два)
a) final abstract class Type {}
b) public static class Type {}
c) final public class Type {}
d) protected abstract class Type {}
e) class Type {}
f) abstract default class Type {}
Вопрос 3.5.
Дан код:
class Hope {
static void action(){
System.out.print(1);
}
}
class Quest {
static Hope hope;
public static void main(String[] args) {
hope.action();
}
}
Каким будет результат компиляции и запуска приложения? (выбрать один)
a) compilation fails
b) NullPointerException при запуске
c) 1
d) null
КЛАССЫ И МЕТОДЫ
119
Вопрос 3.6.
Дан код:
public class A {
int a;
A(int a) {
this.a = a;
}
}
public class Quest {
public static void main(String[] args) {
A a1 = new A(0);
A a2 = new A(0);
System.out.print(a1 == a2);
System.out.print(", " + a1.equals(a2));
System.out.print(", " + (a1.hashCode()==a1.hashCode()));
}
}
Каким будет результат компиляции и запуска приложения? (выбрать один)
a) false, true, false
b) false, false, false
c) false, true, true
d) false, false, true
e) true, true, false
Вопрос 3.7.
Дан код:
class GenericNum<T extends Number> {
T number;
GenericNum(T t) {
number = t;
}
T get() {
return number;
}
}
class GenericsMain {
public static void main(String[] args) {
GenericNum<Integer> i1 = new GenericNum<>(500);
GenericNum<Integer> i2 = new GenericNum<>(500);
System.out.print(i1.get() == i2.get());
System.out.print(i1.get().intValue() == i2.get().intValue());
}
}
Каким будет результат компиляции и запуска программы? (выбрать один)
JAVA FROM EPAM
120
a) falsefalse
b) falsetrue
c) truefalse
d) truetrue
Вопрос 3.8.
Дан код:
public class Quest9 {
enum Numbers {ONE, TWO, THREE, FOUR, FIVE}
public static void main(String[] args) {
Numbers n = Numbers.ONE;
}
}
Сколько раз будет вызван конструктор перечисления Numbers?
a) 0
b) 1
c) 5
Вопрос 3.9.
Какие из перечисленных методов класса Object являются final-методами?
(выбрать четыре)
a) getClass()
b) finalize()
c) notify()
d) wait()
e) notifyAll()
f) clone()